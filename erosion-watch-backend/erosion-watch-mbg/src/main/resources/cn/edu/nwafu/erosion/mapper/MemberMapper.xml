<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nwafu.erosion.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nwafu.erosion.model.Member">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="registration_date" jdbcType="TIMESTAMP" property="registrationDate" />
    <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="date_of_birth" jdbcType="DATE" property="dateOfBirth" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="profile_picture" jdbcType="VARCHAR" property="profilePicture" />
    <result column="organization" jdbcType="VARCHAR" property="organization" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.nwafu.erosion.model.Member">
    <result column="biography" jdbcType="LONGVARCHAR" property="biography" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, nickname, email, registration_date, last_login, first_name, 
    last_name, gender, date_of_birth, address, phone_number, profile_picture, organization, 
    real_name
  </sql>
  <sql id="Blob_Column_List">
    biography
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.nwafu.erosion.model.MemberExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.nwafu.erosion.model.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.nwafu.erosion.model.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.nwafu.erosion.model.Member">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member (username, password, nickname, 
      email, registration_date, last_login, 
      first_name, last_name, gender, 
      date_of_birth, address, phone_number, 
      profile_picture, organization, real_name, 
      biography)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{registrationDate,jdbcType=TIMESTAMP}, #{lastLogin,jdbcType=TIMESTAMP}, 
      #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{dateOfBirth,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{profilePicture,jdbcType=VARCHAR}, #{organization,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{biography,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nwafu.erosion.model.Member">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="registrationDate != null">
        registration_date,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="dateOfBirth != null">
        date_of_birth,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="profilePicture != null">
        profile_picture,
      </if>
      <if test="organization != null">
        organization,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="biography != null">
        biography,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="registrationDate != null">
        #{registrationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="dateOfBirth != null">
        #{dateOfBirth,jdbcType=DATE},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="profilePicture != null">
        #{profilePicture,jdbcType=VARCHAR},
      </if>
      <if test="organization != null">
        #{organization,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="biography != null">
        #{biography,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.nwafu.erosion.model.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.username != null">
        username = #{row.username,jdbcType=VARCHAR},
      </if>
      <if test="row.password != null">
        password = #{row.password,jdbcType=VARCHAR},
      </if>
      <if test="row.nickname != null">
        nickname = #{row.nickname,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.registrationDate != null">
        registration_date = #{row.registrationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastLogin != null">
        last_login = #{row.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="row.firstName != null">
        first_name = #{row.firstName,jdbcType=VARCHAR},
      </if>
      <if test="row.lastName != null">
        last_name = #{row.lastName,jdbcType=VARCHAR},
      </if>
      <if test="row.gender != null">
        gender = #{row.gender,jdbcType=CHAR},
      </if>
      <if test="row.dateOfBirth != null">
        date_of_birth = #{row.dateOfBirth,jdbcType=DATE},
      </if>
      <if test="row.address != null">
        address = #{row.address,jdbcType=VARCHAR},
      </if>
      <if test="row.phoneNumber != null">
        phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="row.profilePicture != null">
        profile_picture = #{row.profilePicture,jdbcType=VARCHAR},
      </if>
      <if test="row.organization != null">
        organization = #{row.organization,jdbcType=VARCHAR},
      </if>
      <if test="row.realName != null">
        real_name = #{row.realName,jdbcType=VARCHAR},
      </if>
      <if test="row.biography != null">
        biography = #{row.biography,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update member
    set id = #{row.id,jdbcType=BIGINT},
      username = #{row.username,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      nickname = #{row.nickname,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      registration_date = #{row.registrationDate,jdbcType=TIMESTAMP},
      last_login = #{row.lastLogin,jdbcType=TIMESTAMP},
      first_name = #{row.firstName,jdbcType=VARCHAR},
      last_name = #{row.lastName,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=CHAR},
      date_of_birth = #{row.dateOfBirth,jdbcType=DATE},
      address = #{row.address,jdbcType=VARCHAR},
      phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      profile_picture = #{row.profilePicture,jdbcType=VARCHAR},
      organization = #{row.organization,jdbcType=VARCHAR},
      real_name = #{row.realName,jdbcType=VARCHAR},
      biography = #{row.biography,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set id = #{row.id,jdbcType=BIGINT},
      username = #{row.username,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      nickname = #{row.nickname,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      registration_date = #{row.registrationDate,jdbcType=TIMESTAMP},
      last_login = #{row.lastLogin,jdbcType=TIMESTAMP},
      first_name = #{row.firstName,jdbcType=VARCHAR},
      last_name = #{row.lastName,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=CHAR},
      date_of_birth = #{row.dateOfBirth,jdbcType=DATE},
      address = #{row.address,jdbcType=VARCHAR},
      phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      profile_picture = #{row.profilePicture,jdbcType=VARCHAR},
      organization = #{row.organization,jdbcType=VARCHAR},
      real_name = #{row.realName,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwafu.erosion.model.Member">
    update member
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="registrationDate != null">
        registration_date = #{registrationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="dateOfBirth != null">
        date_of_birth = #{dateOfBirth,jdbcType=DATE},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="profilePicture != null">
        profile_picture = #{profilePicture,jdbcType=VARCHAR},
      </if>
      <if test="organization != null">
        organization = #{organization,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="biography != null">
        biography = #{biography,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.nwafu.erosion.model.Member">
    update member
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      registration_date = #{registrationDate,jdbcType=TIMESTAMP},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      date_of_birth = #{dateOfBirth,jdbcType=DATE},
      address = #{address,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      profile_picture = #{profilePicture,jdbcType=VARCHAR},
      organization = #{organization,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      biography = #{biography,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nwafu.erosion.model.Member">
    update member
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      registration_date = #{registrationDate,jdbcType=TIMESTAMP},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      date_of_birth = #{dateOfBirth,jdbcType=DATE},
      address = #{address,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      profile_picture = #{profilePicture,jdbcType=VARCHAR},
      organization = #{organization,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>