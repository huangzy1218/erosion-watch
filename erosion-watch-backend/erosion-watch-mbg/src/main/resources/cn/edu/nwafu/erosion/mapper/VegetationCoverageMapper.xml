<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nwafu.erosion.mapper.VegetationCoverageMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nwafu.erosion.model.VegetationCoverage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="area_id" jdbcType="BIGINT" property="areaId" />
    <result column="vegetation_type" jdbcType="VARCHAR" property="vegetationType" />
    <result column="coverage_percentage" jdbcType="DECIMAL" property="coveragePercentage" />
    <result column="density" jdbcType="VARCHAR" property="density" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.nwafu.erosion.model.VegetationCoverage">
    <result column="remarks" jdbcType="LONGVARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, area_id, vegetation_type, coverage_percentage, density, status
  </sql>
  <sql id="Blob_Column_List">
    remarks
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vegetation_coverage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vegetation_coverage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vegetation_coverage
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vegetation_coverage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverageExample">
    delete from vegetation_coverage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vegetation_coverage (area_id, vegetation_type, coverage_percentage, 
      density, status, remarks
      )
    values (#{areaId,jdbcType=BIGINT}, #{vegetationType,jdbcType=VARCHAR}, #{coveragePercentage,jdbcType=DECIMAL}, 
      #{density,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{remarks,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vegetation_coverage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="areaId != null">
        area_id,
      </if>
      <if test="vegetationType != null">
        vegetation_type,
      </if>
      <if test="coveragePercentage != null">
        coverage_percentage,
      </if>
      <if test="density != null">
        density,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="areaId != null">
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="vegetationType != null">
        #{vegetationType,jdbcType=VARCHAR},
      </if>
      <if test="coveragePercentage != null">
        #{coveragePercentage,jdbcType=DECIMAL},
      </if>
      <if test="density != null">
        #{density,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverageExample" resultType="java.lang.Long">
    select count(*) from vegetation_coverage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vegetation_coverage
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.areaId != null">
        area_id = #{row.areaId,jdbcType=BIGINT},
      </if>
      <if test="row.vegetationType != null">
        vegetation_type = #{row.vegetationType,jdbcType=VARCHAR},
      </if>
      <if test="row.coveragePercentage != null">
        coverage_percentage = #{row.coveragePercentage,jdbcType=DECIMAL},
      </if>
      <if test="row.density != null">
        density = #{row.density,jdbcType=VARCHAR},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.remarks != null">
        remarks = #{row.remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update vegetation_coverage
    set id = #{row.id,jdbcType=BIGINT},
      area_id = #{row.areaId,jdbcType=BIGINT},
      vegetation_type = #{row.vegetationType,jdbcType=VARCHAR},
      coverage_percentage = #{row.coveragePercentage,jdbcType=DECIMAL},
      density = #{row.density,jdbcType=VARCHAR},
      status = #{row.status,jdbcType=INTEGER},
      remarks = #{row.remarks,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vegetation_coverage
    set id = #{row.id,jdbcType=BIGINT},
      area_id = #{row.areaId,jdbcType=BIGINT},
      vegetation_type = #{row.vegetationType,jdbcType=VARCHAR},
      coverage_percentage = #{row.coveragePercentage,jdbcType=DECIMAL},
      density = #{row.density,jdbcType=VARCHAR},
      status = #{row.status,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverage">
    update vegetation_coverage
    <set>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT},
      </if>
      <if test="vegetationType != null">
        vegetation_type = #{vegetationType,jdbcType=VARCHAR},
      </if>
      <if test="coveragePercentage != null">
        coverage_percentage = #{coveragePercentage,jdbcType=DECIMAL},
      </if>
      <if test="density != null">
        density = #{density,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverage">
    update vegetation_coverage
    set area_id = #{areaId,jdbcType=BIGINT},
      vegetation_type = #{vegetationType,jdbcType=VARCHAR},
      coverage_percentage = #{coveragePercentage,jdbcType=DECIMAL},
      density = #{density,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nwafu.erosion.model.VegetationCoverage">
    update vegetation_coverage
    set area_id = #{areaId,jdbcType=BIGINT},
      vegetation_type = #{vegetationType,jdbcType=VARCHAR},
      coverage_percentage = #{coveragePercentage,jdbcType=DECIMAL},
      density = #{density,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>