<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nwafu.erosion.mapper.SoilErosionGradeMapper">
    <resultMap id="BaseResultMap" type="cn.edu.nwafu.erosion.model.SoilErosionGrade">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="area_id" jdbcType="BIGINT" property="areaId"/>
        <result column="erosion_type" jdbcType="VARCHAR" property="erosionType"/>
        <result column="erosion_grade" jdbcType="VARCHAR" property="erosionGrade"/>
        <result column="erosion_years" jdbcType="INTEGER" property="erosionYears"/>
        <result column="risk_level" jdbcType="VARCHAR" property="riskLevel"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.nwafu.erosion.model.SoilErosionGrade">
        <result column="erosion_description" jdbcType="LONGVARCHAR" property="erosionDescription"/>
        <result column="risk_assessment_result" jdbcType="LONGVARCHAR" property="riskAssessmentResult"/>
        <result column="management_practice" jdbcType="LONGVARCHAR" property="managementPractice"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, area_id, erosion_type, erosion_grade, erosion_years, risk_level,
        erosion_description, risk_assessment_result, management_practice
    </sql>
    <sql id="Blob_Column_List">
        erosion_description, risk_assessment_result, management_practice
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGradeExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from soil_erosion_grade
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGradeExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from soil_erosion_grade
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from soil_erosion_grade
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from soil_erosion_grade
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGradeExample">
        delete from soil_erosion_grade
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGrade">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into soil_erosion_grade (area_id, erosion_type, erosion_grade,
        erosion_years, risk_level, erosion_description,
        risk_assessment_result, management_practice
        )
        values (#{areaId,jdbcType=BIGINT}, #{erosionType,jdbcType=VARCHAR}, #{erosionGrade,jdbcType=VARCHAR},
        #{erosionYears,jdbcType=INTEGER}, #{riskLevel,jdbcType=VARCHAR}, #{erosionDescription,jdbcType=LONGVARCHAR},
        #{riskAssessmentResult,jdbcType=LONGVARCHAR}, #{managementPractice,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGrade">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into soil_erosion_grade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="areaId != null">
                area_id,
            </if>
            <if test="erosionType != null">
                erosion_type,
            </if>
            <if test="erosionGrade != null">
                erosion_grade,
            </if>
            <if test="erosionYears != null">
                erosion_years,
            </if>
            <if test="riskLevel != null">
                risk_level,
            </if>
            <if test="erosionDescription != null">
                erosion_description,
            </if>
            <if test="riskAssessmentResult != null">
                risk_assessment_result,
            </if>
            <if test="managementPractice != null">
                management_practice,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="areaId != null">
                #{areaId,jdbcType=BIGINT},
            </if>
            <if test="erosionType != null">
                #{erosionType,jdbcType=VARCHAR},
            </if>
            <if test="erosionGrade != null">
                #{erosionGrade,jdbcType=VARCHAR},
            </if>
            <if test="erosionYears != null">
                #{erosionYears,jdbcType=INTEGER},
            </if>
            <if test="riskLevel != null">
                #{riskLevel,jdbcType=VARCHAR},
            </if>
            <if test="erosionDescription != null">
                #{erosionDescription,jdbcType=LONGVARCHAR},
            </if>
            <if test="riskAssessmentResult != null">
                #{riskAssessmentResult,jdbcType=LONGVARCHAR},
            </if>
            <if test="managementPractice != null">
                #{managementPractice,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGradeExample"
            resultType="java.lang.Long">
        select count(*) from soil_erosion_grade
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update soil_erosion_grade
        <set>
            <if test="row.id != null">
                id = #{row.id,jdbcType=BIGINT},
            </if>
            <if test="row.areaId != null">
                area_id = #{row.areaId,jdbcType=BIGINT},
            </if>
            <if test="row.erosionType != null">
                erosion_type = #{row.erosionType,jdbcType=VARCHAR},
            </if>
            <if test="row.erosionGrade != null">
                erosion_grade = #{row.erosionGrade,jdbcType=VARCHAR},
            </if>
            <if test="row.erosionYears != null">
                erosion_years = #{row.erosionYears,jdbcType=INTEGER},
            </if>
            <if test="row.riskLevel != null">
                risk_level = #{row.riskLevel,jdbcType=VARCHAR},
            </if>
            <if test="row.erosionDescription != null">
                erosion_description = #{row.erosionDescription,jdbcType=LONGVARCHAR},
            </if>
            <if test="row.riskAssessmentResult != null">
                risk_assessment_result = #{row.riskAssessmentResult,jdbcType=LONGVARCHAR},
            </if>
            <if test="row.managementPractice != null">
                management_practice = #{row.managementPractice,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update soil_erosion_grade
        set id = #{row.id,jdbcType=BIGINT},
        area_id = #{row.areaId,jdbcType=BIGINT},
        erosion_type = #{row.erosionType,jdbcType=VARCHAR},
        erosion_grade = #{row.erosionGrade,jdbcType=VARCHAR},
        erosion_years = #{row.erosionYears,jdbcType=INTEGER},
        risk_level = #{row.riskLevel,jdbcType=VARCHAR},
        erosion_description = #{row.erosionDescription,jdbcType=LONGVARCHAR},
        risk_assessment_result = #{row.riskAssessmentResult,jdbcType=LONGVARCHAR},
        management_practice = #{row.managementPractice,jdbcType=LONGVARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update soil_erosion_grade
        set id = #{row.id,jdbcType=BIGINT},
        area_id = #{row.areaId,jdbcType=BIGINT},
        erosion_type = #{row.erosionType,jdbcType=VARCHAR},
        erosion_grade = #{row.erosionGrade,jdbcType=VARCHAR},
        erosion_years = #{row.erosionYears,jdbcType=INTEGER},
        risk_level = #{row.riskLevel,jdbcType=VARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGrade">
        update soil_erosion_grade
        <set>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=BIGINT},
            </if>
            <if test="erosionType != null and erosionType != ''">
                erosion_type = #{erosionType,jdbcType=VARCHAR},
            </if>
            <if test="erosionGrade != null and erosionGrade != ''">
                erosion_grade = #{erosionGrade,jdbcType=VARCHAR},
            </if>
            <if test="erosionYears != null">
                erosion_years = #{erosionYears,jdbcType=INTEGER},
            </if>
            <if test="riskLevel != null and riskLevel != ''">
                risk_level = #{riskLevel,jdbcType=VARCHAR},
            </if>
            <if test="erosionDescription != null and erosionDescription != ''">
                erosion_description = #{erosionDescription,jdbcType=LONGVARCHAR},
            </if>
            <if test="riskAssessmentResult != null and riskAssessmentResult != ''">
                risk_assessment_result = #{riskAssessmentResult,jdbcType=LONGVARCHAR},
            </if>
            <if test="managementPractice != null and managementPractice != ''">
                management_practice = #{managementPractice,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGrade">
        update soil_erosion_grade
        set area_id                = #{areaId,jdbcType=BIGINT},
            erosion_type           = #{erosionType,jdbcType=VARCHAR},
            erosion_grade          = #{erosionGrade,jdbcType=VARCHAR},
            erosion_years          = #{erosionYears,jdbcType=INTEGER},
            risk_level             = #{riskLevel,jdbcType=VARCHAR},
            erosion_description    = #{erosionDescription,jdbcType=LONGVARCHAR},
            risk_assessment_result = #{riskAssessmentResult,jdbcType=LONGVARCHAR},
            management_practice    = #{managementPractice,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nwafu.erosion.model.SoilErosionGrade">
        update soil_erosion_grade
        set area_id       = #{areaId,jdbcType=BIGINT},
            erosion_type  = #{erosionType,jdbcType=VARCHAR},
            erosion_grade = #{erosionGrade,jdbcType=VARCHAR},
            erosion_years = #{erosionYears,jdbcType=INTEGER},
            risk_level    = #{riskLevel,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>