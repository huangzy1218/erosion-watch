<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nwafu.erosion.mapper.TerrainLandformMapper">
    <resultMap id="BaseResultMap" type="cn.edu.nwafu.erosion.model.TerrainLandform">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="area_id" jdbcType="BIGINT" property="areaId"/>
        <result column="terrain_type" jdbcType="VARCHAR" property="terrainType"/>
        <result column="landform_type" jdbcType="VARCHAR" property="landformType"/>
        <result column="elevation" jdbcType="DECIMAL" property="elevation"/>
        <result column="slope" jdbcType="DECIMAL" property="slope"/>
        <result column="soil_type" jdbcType="VARCHAR" property="soilType"/>
        <result column="vegetation_type" jdbcType="VARCHAR" property="vegetationType"/>
        <result column="water_system" jdbcType="VARCHAR" property="waterSystem"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, area_id, terrain_type, landform_type, elevation, slope, soil_type, vegetation_type,
    water_system
    </sql>
    <select id="selectByExample" parameterType="cn.edu.nwafu.erosion.model.TerrainLandformExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from terrain_landform
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from terrain_landform
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from terrain_landform
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.edu.nwafu.erosion.model.TerrainLandformExample">
        delete from terrain_landform
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.edu.nwafu.erosion.model.TerrainLandform">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into terrain_landform (area_id, terrain_type, landform_type,
        elevation, slope, soil_type,
        vegetation_type, water_system)
        values (#{areaId,jdbcType=BIGINT}, #{terrainType,jdbcType=VARCHAR}, #{landformType,jdbcType=VARCHAR},
        #{elevation,jdbcType=DECIMAL}, #{slope,jdbcType=DECIMAL}, #{soilType,jdbcType=VARCHAR},
        #{vegetationType,jdbcType=VARCHAR}, #{waterSystem,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.edu.nwafu.erosion.model.TerrainLandform">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into terrain_landform
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="areaId != null">
                area_id,
            </if>
            <if test="terrainType != null">
                terrain_type,
            </if>
            <if test="landformType != null">
                landform_type,
            </if>
            <if test="elevation != null">
                elevation,
            </if>
            <if test="slope != null">
                slope,
            </if>
            <if test="soilType != null">
                soil_type,
            </if>
            <if test="vegetationType != null">
                vegetation_type,
            </if>
            <if test="waterSystem != null">
                water_system,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="areaId != null">
                #{areaId,jdbcType=BIGINT},
            </if>
            <if test="terrainType != null">
                #{terrainType,jdbcType=VARCHAR},
            </if>
            <if test="landformType != null">
                #{landformType,jdbcType=VARCHAR},
            </if>
            <if test="elevation != null">
                #{elevation,jdbcType=DECIMAL},
            </if>
            <if test="slope != null">
                #{slope,jdbcType=DECIMAL},
            </if>
            <if test="soilType != null">
                #{soilType,jdbcType=VARCHAR},
            </if>
            <if test="vegetationType != null">
                #{vegetationType,jdbcType=VARCHAR},
            </if>
            <if test="waterSystem != null">
                #{waterSystem,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.nwafu.erosion.model.TerrainLandformExample"
            resultType="java.lang.Long">
        select count(*) from terrain_landform
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update terrain_landform
        <set>
            <if test="row.id != null">
                id = #{row.id,jdbcType=BIGINT},
            </if>
            <if test="row.areaId != null">
                area_id = #{row.areaId,jdbcType=BIGINT},
            </if>
            <if test="row.terrainType != null">
                terrain_type = #{row.terrainType,jdbcType=VARCHAR},
            </if>
            <if test="row.landformType != null">
                landform_type = #{row.landformType,jdbcType=VARCHAR},
            </if>
            <if test="row.elevation != null">
                elevation = #{row.elevation,jdbcType=DECIMAL},
            </if>
            <if test="row.slope != null">
                slope = #{row.slope,jdbcType=DECIMAL},
            </if>
            <if test="row.soilType != null">
                soil_type = #{row.soilType,jdbcType=VARCHAR},
            </if>
            <if test="row.vegetationType != null">
                vegetation_type = #{row.vegetationType,jdbcType=VARCHAR},
            </if>
            <if test="row.waterSystem != null">
                water_system = #{row.waterSystem,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update terrain_landform
        set id = #{row.id,jdbcType=BIGINT},
        area_id = #{row.areaId,jdbcType=BIGINT},
        terrain_type = #{row.terrainType,jdbcType=VARCHAR},
        landform_type = #{row.landformType,jdbcType=VARCHAR},
        elevation = #{row.elevation,jdbcType=DECIMAL},
        slope = #{row.slope,jdbcType=DECIMAL},
        soil_type = #{row.soilType,jdbcType=VARCHAR},
        vegetation_type = #{row.vegetationType,jdbcType=VARCHAR},
        water_system = #{row.waterSystem,jdbcType=VARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwafu.erosion.model.TerrainLandform">
        update terrain_landform
        <set>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=BIGINT},
            </if>
            <if test="terrainType != null and terrainType != ''">
                terrain_type = #{terrainType,jdbcType=VARCHAR},
            </if>
            <if test="landformType != null and landformType != ''">
                landform_type = #{landformType,jdbcType=VARCHAR},
            </if>
            <if test="elevation != null">
                elevation = #{elevation,jdbcType=DECIMAL},
            </if>
            <if test="slope != null">
                slope = #{slope,jdbcType=DECIMAL},
            </if>
            <if test="soilType != null and soilType != ''">
                soil_type = #{soilType,jdbcType=VARCHAR},
            </if>
            <if test="vegetationType != null and vegetationType != ''">
                vegetation_type = #{vegetationType,jdbcType=VARCHAR},
            </if>
            <if test="waterSystem != null and waterSystem != ''">
                water_system = #{waterSystem,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nwafu.erosion.model.TerrainLandform">
        update terrain_landform
        set area_id         = #{areaId,jdbcType=BIGINT},
            terrain_type    = #{terrainType,jdbcType=VARCHAR},
            landform_type   = #{landformType,jdbcType=VARCHAR},
            elevation       = #{elevation,jdbcType=DECIMAL},
            slope           = #{slope,jdbcType=DECIMAL},
            soil_type       = #{soilType,jdbcType=VARCHAR},
            vegetation_type = #{vegetationType,jdbcType=VARCHAR},
            water_system    = #{waterSystem,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>