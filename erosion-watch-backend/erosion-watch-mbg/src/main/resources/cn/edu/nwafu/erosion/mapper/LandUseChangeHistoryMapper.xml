<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nwafu.erosion.mapper.LandUseChangeHistoryMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nwafu.erosion.model.LandUseChangeHistory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="area_id" jdbcType="BIGINT" property="areaId" />
    <result column="change_date" jdbcType="DATE" property="changeDate" />
    <result column="previous_land_use" jdbcType="VARCHAR" property="previousLandUse" />
    <result column="current_land_use" jdbcType="VARCHAR" property="currentLandUse" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.nwafu.erosion.model.LandUseChangeHistory">
    <result column="change_reason" jdbcType="LONGVARCHAR" property="changeReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, area_id, change_date, previous_land_use, current_land_use
  </sql>
  <sql id="Blob_Column_List">
    change_reason
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from land_use_change_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from land_use_change_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from land_use_change_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from land_use_change_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistoryExample">
    delete from land_use_change_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into land_use_change_history (area_id, change_date, previous_land_use, 
      current_land_use, change_reason)
    values (#{areaId,jdbcType=BIGINT}, #{changeDate,jdbcType=DATE}, #{previousLandUse,jdbcType=VARCHAR}, 
      #{currentLandUse,jdbcType=VARCHAR}, #{changeReason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into land_use_change_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="areaId != null">
        area_id,
      </if>
      <if test="changeDate != null">
        change_date,
      </if>
      <if test="previousLandUse != null">
        previous_land_use,
      </if>
      <if test="currentLandUse != null">
        current_land_use,
      </if>
      <if test="changeReason != null">
        change_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="areaId != null">
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="changeDate != null">
        #{changeDate,jdbcType=DATE},
      </if>
      <if test="previousLandUse != null">
        #{previousLandUse,jdbcType=VARCHAR},
      </if>
      <if test="currentLandUse != null">
        #{currentLandUse,jdbcType=VARCHAR},
      </if>
      <if test="changeReason != null">
        #{changeReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistoryExample" resultType="java.lang.Long">
    select count(*) from land_use_change_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update land_use_change_history
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.areaId != null">
        area_id = #{row.areaId,jdbcType=BIGINT},
      </if>
      <if test="row.changeDate != null">
        change_date = #{row.changeDate,jdbcType=DATE},
      </if>
      <if test="row.previousLandUse != null">
        previous_land_use = #{row.previousLandUse,jdbcType=VARCHAR},
      </if>
      <if test="row.currentLandUse != null">
        current_land_use = #{row.currentLandUse,jdbcType=VARCHAR},
      </if>
      <if test="row.changeReason != null">
        change_reason = #{row.changeReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update land_use_change_history
    set id = #{row.id,jdbcType=BIGINT},
      area_id = #{row.areaId,jdbcType=BIGINT},
      change_date = #{row.changeDate,jdbcType=DATE},
      previous_land_use = #{row.previousLandUse,jdbcType=VARCHAR},
      current_land_use = #{row.currentLandUse,jdbcType=VARCHAR},
      change_reason = #{row.changeReason,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update land_use_change_history
    set id = #{row.id,jdbcType=BIGINT},
      area_id = #{row.areaId,jdbcType=BIGINT},
      change_date = #{row.changeDate,jdbcType=DATE},
      previous_land_use = #{row.previousLandUse,jdbcType=VARCHAR},
      current_land_use = #{row.currentLandUse,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistory">
    update land_use_change_history
    <set>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT},
      </if>
      <if test="changeDate != null">
        change_date = #{changeDate,jdbcType=DATE},
      </if>
      <if test="previousLandUse != null">
        previous_land_use = #{previousLandUse,jdbcType=VARCHAR},
      </if>
      <if test="currentLandUse != null">
        current_land_use = #{currentLandUse,jdbcType=VARCHAR},
      </if>
      <if test="changeReason != null">
        change_reason = #{changeReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistory">
    update land_use_change_history
    set area_id = #{areaId,jdbcType=BIGINT},
      change_date = #{changeDate,jdbcType=DATE},
      previous_land_use = #{previousLandUse,jdbcType=VARCHAR},
      current_land_use = #{currentLandUse,jdbcType=VARCHAR},
      change_reason = #{changeReason,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nwafu.erosion.model.LandUseChangeHistory">
    update land_use_change_history
    set area_id = #{areaId,jdbcType=BIGINT},
      change_date = #{changeDate,jdbcType=DATE},
      previous_land_use = #{previousLandUse,jdbcType=VARCHAR},
      current_land_use = #{currentLandUse,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>